{
    "openapi":"3.0.0",
    "paths":{
       "/connect_sessions":{
          "post":{
             "operationId":"connect_sessions_create",
             "summary":"Create Session",
             "parameters":[
                
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/ConnectSessionCreate"
                      }
                   }
                }
             },
             "responses":{
                "201":{
                   "description":"The details of the connect session created with token.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ConnectSessionToken"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Connect Sessions"
             ]
          }
       },
       "/connect_sessions/authenticate":{
          "post":{
             "operationId":"connect_sessions_authenticate",
             "summary":"Authenticate Session",
             "parameters":[
                
             ],
             "requestBody":{
                "required":true,
                "description":"The parameters to authenticate",
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/ConnectSessionAuthenticate"
                      }
                   }
                }
             },
             "responses":{
                "201":{
                   "description":"The details of the authenticated connect session.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ConnectSession"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Connect Sessions"
             ]
          }
       },
       "/accounts":{
          "get":{
             "operationId":"accounts_list",
             "summary":"List Accounts",
             "parameters":[
                {
                   "name":"provider",
                   "required":false,
                   "in":"query",
                   "description":"The provider of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"origin_owner_id",
                   "required":false,
                   "in":"query",
                   "description":"The origin owner identifier of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of accounts was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "type":"array",
                            "items":{
                               "$ref":"#/components/schemas/Account"
                            }
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Accounts"
             ]
          }
       },
       "/accounts/{id}":{
          "get":{
             "operationId":"accounts_get",
             "summary":"Get Account",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The account with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/Account"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Accounts"
             ]
          },
          "delete":{
             "operationId":"accounts_delete",
             "summary":"Delete Account",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The account with the given identifier was deleted.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/Account"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "404":{
                   "description":"The account with the given identifier does not exist"
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Accounts"
             ]
          }
       },
       "/unified/ats/applications":{
          "get":{
             "operationId":"applications_list",
             "summary":"List Applications",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,candidate_id,job_id,interview_stage,interview_stage_id,rejected_reason,rejected_reason_id,rejected_reason,rejected_reason_ids,rejected_reasons,rejected_at,location_id,status,application_status,created_at,updated_at",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of applications was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ApplicationsPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Applications"
             ]
          },
          "post":{
             "operationId":"application_post",
             "summary":"Post Application (early access)",
             "parameters":[
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/AtsCreateApplicationRequestDto"
                      }
                   }
                }
             },
             "responses":{
                "200":{
                   "description":"The application was created successfully.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ApplicationResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Applications"
             ]
          }
       },
       "/unified/ats/applications/{id}":{
          "get":{
             "operationId":"applications_get",
             "summary":"Get Application",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,candidate_id,job_id,interview_stage,interview_stage_id,rejected_reason,rejected_reason_id,rejected_reason,rejected_reason_ids,rejected_reasons,rejected_at,location_id,status,application_status,created_at,updated_at",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The application with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ApplicationResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Applications"
             ]
          },
          "patch":{
             "operationId":"application_patch",
             "summary":"Patch Application (early access)",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/AtsUpdateApplicationRequestDto"
                      }
                   }
                }
             },
             "responses":{
                "200":{
                   "description":"The Application was successfully updated.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ApplicationResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Applications"
             ]
          }
       },
       "/unified/ats/applications/{id}/offers":{
          "get":{
             "operationId":"applications_offers_list",
             "x-speakeasy-name-override": "list_offers",
             "summary":"List Application Offers",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The offers related to the application with the given identifier were retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ApplicationsOffersPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Applications"
             ]
          }
       },
       "/unified/ats/applications/{id}/offers/{subResourceId}":{
          "get":{
             "operationId":"applications_offers_get",
             "x-speakeasy-name-override": "get_offers",
             "summary":"Get Application Offer",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"subResourceId",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,application_id,start_date,status,offer_status,salary,currency,created_at,updated_at,offer_history",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The offer related to the application with the given identifiers was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ApplicationOfferResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Applications"
             ]
          }
       },
       "/unified/ats/candidates":{
          "get":{
             "operationId":"ats_candidates_list",
             "summary":"List Candidates",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name,first_name,last_name,email,emails,social_links,phone,phone_numbers,company,title,application_ids,created_at,updated_at",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of candidates was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CandidatesPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Candidates"
             ]
          },
          "post":{
             "operationId":"ats_candidate_post",
             "summary":"Post Candidate (early access)",
             "parameters":[
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/AtsCreateCandidateRequestDto"
                      }
                   }
                }
             },
             "responses":{
                "200":{
                   "description":"The candidate was successfully created.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CandidateResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Candidates"
             ]
          }
       },
       "/unified/ats/candidates/{id}":{
          "get":{
             "operationId":"ats_candidates_get",
             "summary":"Get Candidate",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name,first_name,last_name,email,emails,social_links,phone,phone_numbers,company,title,application_ids,created_at,updated_at",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The candidate with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CandidateResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Candidates"
             ]
          },
          "patch":{
             "operationId":"ats_candidate_patch",
             "summary":"Patch Candidate (early access)",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/AtsUpdateCandidatesRequestDto"
                      }
                   }
                }
             },
             "responses":{
                "200":{
                   "description":"The candidate was successfully updated.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CandidateResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Candidates"
             ]
          }
       },
       "/unified/ats/departments":{
          "get":{
             "operationId":"ats_departments_list",
             "summary":"List Departments",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of departments was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/DepartmentsPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Departments"
             ]
          }
       },
       "/unified/ats/departments/{id}":{
          "get":{
             "operationId":"ats_departments_get",
             "summary":"Get Department",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The department with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/DepartmentResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Departments"
             ]
          }
       },
       "/unified/ats/interview_stages":{
          "get":{
             "operationId":"ats_interview_stages_list",
             "summary":"List Interview Stages",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name,order,created_at,updated_at",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of interview-stages was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/InterviewStagesPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS Interview Stages"
             ]
          }
       },
       "/unified/ats/interview_stages/{id}":{
          "get":{
             "operationId":"ats_interview_stages_get",
             "summary":"Get Interview Stage",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name,order,created_at,updated_at",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The interview-stage with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/InterviewStageResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS Interview Stages"
             ]
          }
       },
       "/unified/ats/interviews":{
          "get":{
             "operationId":"ats_interviews_list",
             "summary":"List Interviews",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,application_id,interview_stage_id,interview_stage,status,interview_status,interviewer_ids,interviewers,start_at,end_at,meeting_url,created_at,updated_at",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of interviews was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/InterviewsPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Interviews"
             ]
          }
       },
       "/unified/ats/interviews/{id}":{
          "get":{
             "operationId":"ats_interviews_get",
             "summary":"Get Interview",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,application_id,interview_stage_id,interview_stage,status,interview_status,interviewer_ids,interviewers,start_at,end_at,meeting_url,created_at,updated_at",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The interview with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/InterviewsResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Interviews"
             ]
          }
       },
       "/unified/ats/jobs":{
          "get":{
             "operationId":"ats_jobs_list",
             "summary":"List Jobs",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,code,title,status,job_status,department_ids,location_ids,hiring_team,confidential,created_at,updated_at",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of jobs was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/JobsPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Jobs"
             ]
          }
       },
       "/unified/ats/jobs/{id}":{
          "get":{
             "operationId":"ats_jobs_get",
             "summary":"Get Job",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,code,title,status,job_status,department_ids,location_ids,hiring_team,confidential,created_at,updated_at",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The job with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/JobResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Jobs"
             ]
          }
       },
       "/unified/ats/locations":{
          "get":{
             "operationId":"ats_locations_list",
             "summary":"List locations",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of locations was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/LocationsPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Locations"
             ]
          }
       },
       "/unified/ats/locations/{id}":{
          "get":{
             "operationId":"ats_locations_get",
             "summary":"Get Location",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The location with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/LocationResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Locations"
             ]
          }
       },
       "/unified/ats/rejected_reasons":{
          "get":{
             "operationId":"ats_rejected_reasons_list",
             "summary":"List Rejected Reasons",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,label,type,rejected_reason_type",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of rejected reasons was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/RejectedReasonsPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS Rejected Reasons"
             ]
          }
       },
       "/unified/ats/rejected_reasons/{id}":{
          "get":{
             "operationId":"ats_rejected_reasons_get",
             "summary":"Get Rejected Reason",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,label,type,rejected_reason_type",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The rejected reason with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/RejectedReasonResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS Rejected Reasons"
             ]
          }
       },
       "/unified/ats/users":{
          "get":{
             "operationId":"ats_users_list",
             "summary":"List Users",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,first_name,last_name,name,email",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of users was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/UsersPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Users"
             ]
          }
       },
       "/unified/ats/users/{id}":{
          "get":{
             "operationId":"ats_users_get",
             "summary":"Get User",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,first_name,last_name,name,email",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The user with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/UserResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "ATS_Users"
             ]
          }
       },
       "/unified/hris/companies":{
          "get":{
             "operationId":"hris_companies_list",
             "summary":"List Companies",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,full_name,display_name",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of Companies was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CompaniesPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "HRIS_Companies"
             ]
          }
       },
       "/unified/hris/companies/{id}":{
          "get":{
             "operationId":"hris_companies_get",
             "summary":"Get Company",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,full_name,display_name",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The Company with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CompanyResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "HRIS_Companies"
             ]
          }
       },
       "/unified/hris/employees":{
          "get":{
             "operationId":"hris_employees_list",
             "summary":"List Employees",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,first_name,last_name,name,display_name,gender,ethnicity,date_of_birth,birthday,marital_status,avatar_url,avatar,personal_email,personal_phone_number,work_email,work_phone_number,job_title,department,manager_id,hire_date,start_date,tenure,work_anniversary,employment_type,employment_status,termination_date,company_name",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"expand",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields that will be expanded in the response",
                   "example":"work_location,home_location,employments",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of employees was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/EmployeesPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "HRIS_Employees"
             ]
          },
          "post":{
             "operationId":"employee_post",
             "summary":"Creates an employee",
             "parameters":[
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/HrisCreateEmployeeRequestDto"
                      }
                   }
                }
             },
             "responses":{
                "201":{
                   "description":"The employee was created successfully.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CreateEmployeeResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "HRIS_Employees"
             ]
          }
       },
       "/unified/hris/employees/{id}":{
          "get":{
             "operationId":"hris_employees_get",
             "summary":"Get Employee",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,first_name,last_name,name,display_name,gender,ethnicity,date_of_birth,birthday,marital_status,avatar_url,avatar,personal_email,personal_phone_number,work_email,work_phone_number,job_title,department,manager_id,hire_date,start_date,tenure,work_anniversary,employment_type,employment_status,termination_date,company_name",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"expand",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields that will be expanded in the response",
                   "example":"work_location,home_location,employments",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The employee with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/EmployeeResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "HRIS_Employees"
             ]
          }
       },
       "/unified/hris/employments":{
          "get":{
             "operationId":"hris_employments_list",
             "summary":"List Employments",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,employee_id,job_title,pay_rate,pay_period,pay_frequency,pay_currency,effective_date,employment_type",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of Employments was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/EmploymentsPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "HRIS_Employments"
             ]
          }
       },
       "/unified/hris/employments/{id}":{
          "get":{
             "operationId":"hris_employments_get",
             "summary":"Get Employment",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,employee_id,job_title,pay_rate,pay_period,pay_frequency,pay_currency,effective_date,employment_type",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The Employment with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/EmploymentResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "HRIS_Employments"
             ]
          }
       },
       "/unified/hris/locations":{
          "get":{
             "operationId":"hris_locations_list",
             "summary":"List locations",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,employee_id,name,phone_number,street_1,street_2,city,state,zip_code,country,location_type",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of Locations was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/LocationsPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "HRIS_Locations"
             ]
          }
       },
       "/unified/hris/locations/{id}":{
          "get":{
             "operationId":"hris_locations_get",
             "summary":"Get location",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,employee_id,name,phone_number,street_1,street_2,city,state,zip_code,country,location_type",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The Location with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/LocationResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "HRIS_Locations"
             ]
          }
       },
       "/unified/crm/contacts":{
          "get":{
             "operationId":"contacts_list",
             "summary":"List Contacts",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,first_name,last_name,company_name,emails,phone_numbers,deal_ids,account_ids,created_at,updated_at",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of contacts was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ContactsPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Contacts"
             ]
          },
          "post":{
             "operationId":"crm_contact_post",
             "summary":"Post Contact (early access)",
             "parameters":[
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/CrmCreateContactRequestDto"
                      }
                   }
                }
             },
             "responses":{
                "200":{
                   "description":"The contact was successfully created.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ContactResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Contacts"
             ]
          }
       },
       "/unified/crm/contacts/{id}":{
          "get":{
             "operationId":"crm_contacts_get",
             "summary":"Get Contact",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,first_name,last_name,company_name,emails,phone_numbers,deal_ids,account_ids,created_at,updated_at",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The contact with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ContactResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Contacts"
             ]
          },
          "patch":{
             "operationId":"crm_contact_patch",
             "summary":"Patch Contact (early access)",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/CrmUpdateContactRequestDto"
                      }
                   }
                }
             },
             "responses":{
                "200":{
                   "description":"The contact was successfully updated.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/ContactResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Contacts"
             ]
          }
       },
       "/unified/crm/accounts":{
          "get":{
             "operationId":"crm_accounts_list",
             "summary":"List Accounts",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,owner_id,name,description,industry,annual_revenue,website,addresses,phone_numbers,created_at,updated_at",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of accounts was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/AccountsPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "CRM Accounts"
             ]
          }
       },
       "/unified/crm/accounts/{id}":{
          "get":{
             "operationId":"crm_accounts_get",
             "summary":"Get Account",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,owner_id,name,description,industry,annual_revenue,website,addresses,phone_numbers,created_at,updated_at",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The account with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/AccountResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "CRM Accounts"
             ]
          }
       },
       "/unified/marketing/templates":{
          "get":{
             "operationId":"marketing_templates_list",
             "summary":"List templates",
             "parameters":[
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "422":{
                   "description":"Unprocessable Entity: The type of message must be specified in the URL (e.g. templates/email)."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Marketing_Templates"
             ]
          }
       },
       "/unified/marketing/templates/email":{
          "get":{
             "operationId":"marketing_email_templates_list",
             "x-speakeasy-name-override": "list_email",
             "summary":"List email templates",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name,messages,message_type,created_at,updated_at,tags",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of email templates was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/TemplatesPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Marketing_Templates"
             ]
          },
          "post":{
             "operationId":"marketing_email_template_create",
             "x-speakeasy-name-override": "create_email",
             "summary":"Creates an email template",
             "parameters":[
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/MarketingCreateTemplateRequestDto"
                      }
                   }
                }
             },
             "responses":{
                "201":{
                   "description":"The email template was created successfully.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CreateTemplateResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Marketing_Templates"
             ]
          }
       },
       "/unified/marketing/templates/email/{id}":{
          "get":{
             "operationId":"marketing_email_templates_get",
             "x-speakeasy-name-override": "get_email",
             "summary":"Get email template",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name,messages,message_type,created_at,updated_at,tags",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The email template with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/TemplateResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Marketing_Templates"
             ]
          }
       },
       "/unified/marketing/templates/omni_channel":{
          "get":{
             "operationId":"marketing_omni_channel_templates_list",
             "x-speakeasy-name-override": "list_omnichannel",
             "summary":"List omni-channel templates",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name,messages,message_type,created_at,updated_at,tags",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of omni-channel templates was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/TemplatesPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Marketing_Templates"
             ]
          },
          "post":{
             "operationId":"marketing_omni_channel_template_create",
             "x-speakeasy-name-override": "create_omnichannel",
             "summary":"Creates an omni-channel template",
             "parameters":[
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/MarketingCreateTemplateRequestDto"
                      }
                   }
                }
             },
             "responses":{
                "201":{
                   "description":"The omni-channel template was created successfully.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CreateTemplateResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Marketing_Templates"
             ]
          }
       },
       "/unified/marketing/templates/omni_channel/{id}":{
          "get":{
             "operationId":"marketing_omni_channel_templates_get",
             "x-speakeasy-name-override": "get_omnichannel",
             "summary":"Get omni-channel template",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name,messages,message_type,created_at,updated_at,tags",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The omni-channel template with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/TemplateResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Marketing_Templates"
             ]
          }
       },
       "/unified/marketing/templates/push":{
          "get":{
             "operationId":"marketing_push_templates_list",
             "x-speakeasy-name-override": "list_push",
             "summary":"List push templates",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name,messages,message_type,created_at,updated_at,tags",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of push templates was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/TemplatesPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Marketing_Templates"
             ]
          },
          "post":{
             "operationId":"marketing_push_template_create",
             "x-speakeasy-name-override": "create_push",
             "summary":"Creates an push template",
             "parameters":[
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/MarketingCreateTemplateRequestDto"
                      }
                   }
                }
             },
             "responses":{
                "201":{
                   "description":"The push template was created successfully.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CreateTemplateResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Marketing_Templates"
             ]
          }
       },
       "/unified/marketing/templates/push/{id}":{
          "get":{
             "operationId":"marketing_push_templates_get",
             "x-speakeasy-name-override": "get_push",
             "summary":"Get push template",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name,messages,message_type,created_at,updated_at,tags",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The push template with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/TemplateResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Marketing_Templates"
             ]
          }
       },
       "/unified/marketing/campaigns":{
          "get":{
             "operationId":"marketing_campaigns_list",
             "summary":"List campaigns",
             "parameters":[
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name,created_at,updated_at,description,schedule_type,status,channels,first_sent_at,last_sent_at,tags,messages",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The list of campaigns was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CampaignsPaginated"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Campaigns"
             ]
          }
       },
       "/unified/marketing/campaigns/{id}":{
          "get":{
             "operationId":"marketing_campaigns_get",
             "summary":"Get campaign",
             "parameters":[
                {
                   "name":"id",
                   "required":true,
                   "in":"path",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page",
                   "required":false,
                   "in":"query",
                   "description":"The page number of the results to fetch",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"page_size",
                   "required":false,
                   "in":"query",
                   "description":"The number of results per page",
                   "schema":{
                      "default":"25",
                      "type":"string"
                   }
                },
                {
                   "name":"raw",
                   "required":false,
                   "in":"query",
                   "description":"Indicates that the raw request result is returned",
                   "schema":{
                      "default":false,
                      "type":"boolean"
                   }
                },
                {
                   "name":"fields",
                   "required":false,
                   "in":"query",
                   "description":"The comma separated list of fields to return in the response (if empty, all fields are returned)",
                   "example":"id,name,created_at,updated_at,description,schedule_type,status,channels,first_sent_at,last_sent_at,tags,messages",
                   "schema":{
                      "default":"",
                      "type":"string"
                   }
                },
                {
                   "name":"sync_token",
                   "required":false,
                   "in":"query",
                   "description":"The sync token to select the only updated results",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"updated_after",
                   "required":false,
                   "in":"query",
                   "description":"Use a string with a date to only select results updated after that given date",
                   "schema":{
                      "type":"string"
                   }
                },
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"The campaign with the given identifier was retrieved.",
                   "content":{
                      "application/json":{
                         "schema":{
                            "$ref":"#/components/schemas/CampaignResult"
                         }
                      }
                   }
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Campaigns"
             ]
          }
       },
       "/unified/proxy":{
          "post":{
             "operationId":"proxy_request_post",
             "summary":"Proxy Request",
             "parameters":[
                {
                   "name":"x-account-id",
                   "in":"header",
                   "description":"The account identifier",
                   "required":true,
                   "schema":{
                      "type":"string"
                   }
                }
             ],
             "requestBody":{
                "required":true,
                "description":"The request body",
                "content":{
                   "application/json":{
                      "schema":{
                         "$ref":"#/components/schemas/ProxyRequestBody"
                      }
                   }
                }
             },
             "responses":{
                "200":{
                   "description":"The proxy request was successful."
                },
                "400":{
                   "description":"Invalid request."
                },
                "403":{
                   "description":"Forbidden."
                },
                "412":{
                   "description":"Precondition failed: linked account belongs to a disabled integration."
                },
                "429":{
                   "description":"Too many requests."
                },
                "500":{
                   "description":"Server error while executing the request."
                },
                "501":{
                   "description":"This functionality is not implemented."
                }
             },
             "tags":[
                "Proxy"
             ]
          }
       }
    },
    "info":{
       "title":"StackOne Unified API",
       "description":"The documentation for the StackOne Unified API",
       "version":"1.0.0",
       "contact":{
          
       }
    },
    "tags":[
       {
          "name":"Accounts",
          "description":""
       },
       {
          "name":"Applications",
          "description":""
       },
       {
          "name":"Campaigns",
          "description":""
       },
       {
          "name":"Candidates",
          "description":""
       },
       {
          "name":"Companies",
          "description":""
       },
       {
          "name":"Connect Sessions",
          "description":""
       },
       {
          "name":"Contacts",
          "description":""
       },
       {
          "name":"Departments",
          "description":""
       },
       {
          "name":"Employees",
          "description":""
       },
       {
          "name":"Employments",
          "description":""
       },
       {
          "name":"Interview Stages",
          "description":""
       },
       {
          "name":"Interviews",
          "description":""
       },
       {
          "name":"Jobs",
          "description":""
       },
       {
          "name":"Locations",
          "description":""
       },
       {
          "name":"Proxy",
          "description":""
       },
       {
          "name":"Rejected Reasons",
          "description":""
       },
       {
          "name":"Templates",
          "description":""
       },
       {
          "name":"Users",
          "description":""
       }
    ],
    "servers":[
       {
          "url":"api.stackone.com"
       }
    ],
    "security":[
      {
         "basic":[
            
         ]
      }
   ],
   "x-speakeasy-name-override": [
      {"operationId":".*_list$",
       "methodNameOverride":"list"},
      {"operationId":".*_get$",
       "methodNameOverride":"get"},
      {"operationId":".*_post$",
       "methodNameOverride":"create"},
      {"operationId":".*_patch$",
       "methodNameOverride":"update"},
      {"operationId":".*_delete$",
       "methodNameOverride":"delete"}
   ],
    "components":{
       "securitySchemes":{
          "basic":{
             "type":"http",
             "scheme":"basic"
          }
       },
       "schemas":{
          "ConnectSessionCreate":{
             "type":"object",
             "properties":{
                "categories":{
                   "type":"array",
                   "description":"The categories of the provider to connect to",
                   "example":[
                      "ats",
                      "hris",
                      "crm",
                      "marketing",
                      "common"
                   ],
                   "items":{
                      "type":"string",
                      "enum":[
                         "ats",
                         "hris",
                         "crm",
                         "marketing",
                         "common"
                      ]
                   }
                },
                "provider":{
                   "type":"string",
                   "description":"The provider to connect to"
                },
                "origin_owner_id":{
                   "type":"string",
                   "description":"The origin owner identifier"
                },
                "origin_owner_name":{
                   "type":"string",
                   "description":"The origin owner name"
                },
                "origin_username":{
                   "type":"string",
                   "description":"The origin username"
                },
                "expires_in":{
                   "type":"number",
                   "description":"How long the session should be valid for in seconds",
                   "default":1800
                },
                "metadata":{
                   "type":"object",
                   "description":"The metadata for the connection"
                }
             },
             "required":[
                "origin_owner_id",
                "origin_owner_name"
             ]
          },
          "ConnectSessionToken":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "organization_id":{
                   "type":"string"
                },
                "project_id":{
                   "type":"string"
                },
                "categories":{
                   "type":"array",
                   "example":[
                      "ats",
                      "hris",
                      "crm",
                      "marketing",
                      "common"
                   ],
                   "items":{
                      "type":"string",
                      "enum":[
                         "ats",
                         "hris",
                         "crm",
                         "marketing",
                         "common"
                      ]
                   }
                },
                "provider":{
                   "type":"string"
                },
                "origin_owner_id":{
                   "type":"string"
                },
                "origin_owner_name":{
                   "type":"string"
                },
                "origin_username":{
                   "type":"string"
                },
                "created_at":{
                   "format":"date-time",
                   "type":"string"
                },
                "token":{
                   "type":"string"
                }
             },
             "required":[
                "id",
                "organization_id",
                "project_id",
                "provider",
                "origin_owner_id",
                "origin_owner_name",
                "created_at",
                "token"
             ]
          },
          "ConnectSessionAuthenticate":{
             "type":"object",
             "properties":{
                "token":{
                   "type":"string",
                   "description":"The token to authenticate with"
                }
             },
             "required":[
                "token"
             ]
          },
          "ConnectSession":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "organization_id":{
                   "type":"string"
                },
                "project_id":{
                   "type":"string"
                },
                "categories":{
                   "type":"array",
                   "example":[
                      "ats",
                      "hris",
                      "crm",
                      "marketing",
                      "common"
                   ],
                   "items":{
                      "type":"string",
                      "enum":[
                         "ats",
                         "hris",
                         "crm",
                         "marketing",
                         "common"
                      ]
                   }
                },
                "provider":{
                   "type":"string"
                },
                "origin_owner_id":{
                   "type":"string"
                },
                "origin_owner_name":{
                   "type":"string"
                },
                "origin_username":{
                   "type":"string"
                },
                "created_at":{
                   "format":"date-time",
                   "type":"string"
                }
             },
             "required":[
                "id",
                "organization_id",
                "project_id",
                "provider",
                "origin_owner_id",
                "origin_owner_name",
                "created_at"
             ]
          },
          "Account":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "provider":{
                   "type":"string"
                },
                "active":{
                   "type":"boolean"
                },
                "origin_owner_id":{
                   "type":"string"
                },
                "origin_owner_name":{
                   "type":"string"
                },
                "origin_username":{
                   "type":"string"
                },
                "credentials":{
                   "type":"object"
                },
                "created_at":{
                   "format":"date-time",
                   "type":"string"
                },
                "updated_at":{
                   "format":"date-time",
                   "type":"string"
                }
             },
             "required":[
                "id",
                "provider",
                "active",
                "origin_owner_id",
                "origin_owner_name",
                "origin_username",
                "created_at",
                "updated_at"
             ]
          },
          "InterviewStage":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                },
                "order":{
                   "type":"number"
                },
                "created_at":{
                   "format":"date-time",
                   "type":"string"
                },
                "updated_at":{
                   "format":"date-time",
                   "type":"string"
                }
             },
             "required":[
                "id",
                "name"
             ]
          },
          "RejectedReasonTypeEnum":{
             "type":"object",
             "properties":{
                "value":{
                   "type":"string",
                   "enum":[
                      "rejected_by_candidate",
                      "rejected_by_organization",
                      "other",
                      "unknown",
                      "unmapped_value"
                   ]
                },
                "source_value":{
                   "type":"string"
                }
             },
             "required":[
                "value",
                "source_value"
             ]
          },
          "RejectedReason":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "label":{
                   "type":"string"
                },
                "rejected_reason_type":{
                   "$ref":"#/components/schemas/RejectedReasonTypeEnum"
                }
             },
             "required":[
                "id",
                "label",
                "rejected_reason_type"
             ]
          },
          "ApplicationStatusEnum":{
             "type":"object",
             "properties":{
                "value":{
                   "type":"string",
                   "enum":[
                      "active",
                      "converted",
                      "hired",
                      "lead",
                      "rejected",
                      "unmapped_value"
                   ]
                },
                "source_value":{
                   "type":"string"
                }
             },
             "required":[
                "value",
                "source_value"
             ]
          },
          "Application":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "candidate_id":{
                   "type":"string"
                },
                "job_id":{
                   "type":"string"
                },
                "interview_stage":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/InterviewStage"
                   }
                },
                "interview_stage_id":{
                   "type":"string"
                },
                "rejected_reasons":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/RejectedReason"
                   }
                },
                "rejected_reason_ids":{
                   "type":"string"
                },
                "rejected_at":{
                   "type":"string"
                },
                "location_id":{
                   "type":"string"
                },
                "application_status":{
                   "$ref":"#/components/schemas/ApplicationStatusEnum"
                },
                "created_at":{
                   "type":"string"
                },
                "updated_at":{
                   "type":"string"
                }
             },
             "required":[
                "id",
                "candidate_id",
                "job_id",
                "interview_stage_id",
                "location_id",
                "application_status",
                "created_at",
                "updated_at"
             ]
          },
          "ApplicationsPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Application"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "ApplicationResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/Application"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data"
             ]
          },
          "AtsUpdateApplicationRequestDto":{
             "type":"object",
             "properties":{
                "candidate_id":{
                   "type":"string"
                },
                "job_id":{
                   "type":"string"
                },
                "interview_stage_id":{
                   "type":"string"
                },
                "location_id":{
                   "type":"string"
                },
                "application_status":{
                   "$ref":"#/components/schemas/ApplicationStatusEnum"
                }
             }
          },
          "OfferStatusEnumApiModel":{
             "type":"object",
             "properties":{
                "value":{
                   "type":"string",
                   "enum":[
                      "pending",
                      "retracted",
                      "unmapped_value"
                   ]
                },
                "source_value":{
                   "type":"string"
                }
             },
             "required":[
                "value",
                "source_value"
             ]
          },
          "OfferHistory":{
             "type":"object",
             "properties":{
                "start_date":{
                   "format":"date-time",
                   "type":"string"
                },
                "salary":{
                   "type":"number"
                },
                "currency":{
                   "type":"string"
                },
                "created_at":{
                   "type":"string"
                },
                "updated_at":{
                   "type":"string"
                }
             },
             "required":[
                "start_date"
             ]
          },
          "Offer":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "application_id":{
                   "type":"string"
                },
                "start_date":{
                   "format":"date-time",
                   "type":"string"
                },
                "offer_status":{
                   "$ref":"#/components/schemas/OfferStatusEnumApiModel"
                },
                "salary":{
                   "type":"number"
                },
                "currency":{
                   "type":"string"
                },
                "created_at":{
                   "type":"string"
                },
                "updated_at":{
                   "type":"string"
                },
                "offer_history":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/OfferHistory"
                   }
                }
             },
             "required":[
                "id",
                "application_id",
                "start_date",
                "offer_status"
             ]
          },
          "ApplicationsOffersPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Offer"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "AtsCreateApplicationRequestDto":{
             "type":"object",
             "properties":{
                "candidate_id":{
                   "type":"string"
                },
                "job_id":{
                   "type":"string"
                },
                "interview_stage_id":{
                   "type":"string"
                },
                "location_id":{
                   "type":"string"
                },
                "application_status":{
                   "$ref":"#/components/schemas/ApplicationStatusEnum"
                }
             },
             "required":[
                "candidate_id",
                "job_id",
                "interview_stage_id",
                "location_id",
                "application_status"
             ]
          },
          "ApplicationOfferResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/Offer"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data"
             ]
          },
          "CandidateEmail":{
             "type":"object",
             "properties":{
                "type":{
                   "type":"string"
                },
                "value":{
                   "type":"string"
                }
             },
             "required":[
                "type",
                "value"
             ]
          },
          "SocialLink":{
             "type":"object",
             "properties":{
                "type":{
                   "type":"string"
                },
                "url":{
                   "type":"string"
                }
             },
             "required":[
                "type",
                "url"
             ]
          },
          "Candidate":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                },
                "first_name":{
                   "type":"string"
                },
                "last_name":{
                   "type":"string"
                },
                "email":{
                   "type":"string"
                },
                "emails":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/CandidateEmail"
                   }
                },
                "social_links":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/SocialLink"
                   }
                },
                "phone":{
                   "type":"string"
                },
                "company":{
                   "type":"string"
                },
                "title":{
                   "type":"string"
                },
                "application_ids":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "created_at":{
                   "format":"date-time",
                   "type":"string"
                },
                "updated_at":{
                   "format":"date-time",
                   "type":"string"
                }
             },
             "required":[
                "id",
                "name",
                "first_name",
                "last_name",
                "email",
                "emails",
                "social_links",
                "title",
                "created_at",
                "updated_at"
             ]
          },
          "CandidatesPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Candidate"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "CandidateResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/Candidate"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data"
             ]
          },
          "AtsUpdateCandidatesRequestDto":{
             "type":"object",
             "properties":{
                "name":{
                   "type":"string"
                },
                "first_name":{
                   "type":"string"
                },
                "last_name":{
                   "type":"string"
                },
                "emails":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/CandidateEmail"
                   }
                },
                "phone":{
                   "type":"string"
                },
                "company":{
                   "type":"string"
                },
                "title":{
                   "type":"string"
                },
                "application_ids":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                }
             }
          },
          "AtsCreateCandidateRequestDto":{
             "type":"object",
             "properties":{
                "name":{
                   "type":"string"
                },
                "first_name":{
                   "type":"string"
                },
                "last_name":{
                   "type":"string"
                },
                "emails":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/CandidateEmail"
                   }
                },
                "phone":{
                   "type":"string"
                },
                "company":{
                   "type":"string"
                },
                "title":{
                   "type":"string"
                },
                "application_ids":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                }
             },
             "required":[
                "name",
                "first_name",
                "last_name",
                "emails",
                "title"
             ]
          },
          "Department":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                }
             },
             "required":[
                "id",
                "name"
             ]
          },
          "DepartmentsPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Department"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "DepartmentResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/Department"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data"
             ]
          },
          "InterviewStagesPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/InterviewStage"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "InterviewStageResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/InterviewStage"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data"
             ]
          },
          "InterviewStatusEnum":{
             "type":"object",
             "properties":{
                "value":{
                   "type":"string",
                   "enum":[
                      "scheduled",
                      "completed",
                      "cancelled",
                      "pending_feedback",
                      "unmapped_value"
                   ]
                },
                "source_value":{
                   "type":"string"
                }
             },
             "required":[
                "value",
                "source_value"
             ]
          },
          "Interviewer":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "first_name":{
                   "type":"string"
                },
                "last_name":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                },
                "email":{
                   "type":"string"
                }
             },
             "required":[
                "id",
                "first_name",
                "last_name",
                "name",
                "email"
             ]
          },
          "Interview":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "application_id":{
                   "type":"string"
                },
                "interview_stage_id":{
                   "type":"string"
                },
                "interview_stage":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/InterviewStage"
                   }
                },
                "interview_status":{
                   "$ref":"#/components/schemas/InterviewStatusEnum"
                },
                "interviewer_ids":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "interviewers":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Interviewer"
                   }
                },
                "start_time":{
                   "format":"date-time",
                   "type":"string"
                },
                "end_time":{
                   "format":"date-time",
                   "type":"string"
                },
                "meeting_url":{
                   "type":"string"
                },
                "created_at":{
                   "format":"date-time",
                   "type":"string"
                },
                "updated_at":{
                   "format":"date-time",
                   "type":"string"
                }
             },
             "required":[
                "id",
                "application_id",
                "interview_stage_id",
                "interview_status",
                "interviewer_ids",
                "start_time",
                "end_time"
             ]
          },
          "InterviewsPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Interview"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "InterviewsResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/Interview"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data"
             ]
          },
          "HiringTeam":{
             "type":"object",
             "properties":{
                "user_id":{
                   "type":"string"
                },
                "first_name":{
                   "type":"string"
                },
                "last_name":{
                   "type":"string"
                },
                "email":{
                   "type":"string"
                },
                "role":{
                   "type":"string"
                }
             }
          },
          "JobStatusEnum":{
             "type":"object",
             "properties":{
                "value":{
                   "type":"string",
                   "enum":[
                      "published",
                      "draft",
                      "pending",
                      "internal",
                      "archived",
                      "closed",
                      "open",
                      "unmapped_value"
                   ]
                },
                "source_value":{
                   "type":"string"
                }
             },
             "required":[
                "value",
                "source_value"
             ]
          },
          "Job":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "code":{
                   "type":"string"
                },
                "title":{
                   "type":"string"
                },
                "company_id":{
                   "type":"string"
                },
                "department_ids":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "hiring_team":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/HiringTeam"
                   }
                },
                "location_ids":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "job_status":{
                   "$ref":"#/components/schemas/JobStatusEnum"
                },
                "confidential":{
                   "type":"string",
                   "enum":[
                      "true",
                      "false"
                   ]
                },
                "created_at":{
                   "type":"string"
                },
                "updated_at":{
                   "type":"string"
                }
             },
             "required":[
                "id",
                "code",
                "title",
                "company_id",
                "department_ids",
                "location_ids",
                "job_status",
                "created_at",
                "updated_at"
             ]
          },
          "JobsPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Job"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "JobResult":{
             "type":"object",
             "properties":{
                "job":{
                   "$ref":"#/components/schemas/Job"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "job"
             ]
          },
          "Location":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                }
             },
             "required":[
                "id",
                "name"
             ]
          },
          "LocationsPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Location"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "LocationResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/Location"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data"
             ]
          },
          "RejectedReasonsPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/RejectedReason"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "RejectedReasonResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/RejectedReason"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data"
             ]
          },
          "User":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "email":{
                   "type":"string"
                },
                "first_name":{
                   "type":"string"
                },
                "last_name":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                },
                "phone":{
                   "type":"string"
                }
             },
             "required":[
                "id",
                "email",
                "first_name",
                "last_name",
                "name",
                "phone"
             ]
          },
          "UsersPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/User"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data",
                "raw"
             ]
          },
          "UserResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/User"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data",
                "raw"
             ]
          },
          "Company":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                },
                "display_name":{
                   "type":"string"
                }
             }
          },
          "CompaniesPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Company"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "CompanyResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/Company"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data"
             ]
          },
          "GenderEnum":{
             "type":"object",
             "properties":{
                "value":{
                   "type":"string",
                   "enum":[
                      "male",
                      "female",
                      "non_binary",
                      "other",
                      "not_disclosed",
                      "diverse",
                      "unmapped_value"
                   ]
                },
                "source_value":{
                   "type":"string"
                }
             },
             "required":[
                "value",
                "source_value"
             ]
          },
          "EthnicityEnum":{
             "type":"object",
             "properties":{
                "value":{
                   "type":"string",
                   "enum":[
                      "white",
                      "black_or_african_american",
                      "asian",
                      "hispanic_or_latino",
                      "american_indian_or_alaska_native",
                      "native_hawaiian_or_pacific_islander",
                      "two_or_more_races",
                      "not_disclosed",
                      "other",
                      "unmapped_value"
                   ]
                },
                "source_value":{
                   "type":"string"
                }
             },
             "required":[
                "value",
                "source_value"
             ]
          },
          "MaritalStatusEnum":{
             "type":"object",
             "properties":{
                "value":{
                   "type":"string",
                   "enum":[
                      "single",
                      "married",
                      "common_law",
                      "divorced",
                      "widowed",
                      "domestic_partnership",
                      "separated",
                      "other",
                      "not_disclosed",
                      "unmapped_value"
                   ]
                },
                "source_value":{
                   "type":"string"
                }
             },
             "required":[
                "value",
                "source_value"
             ]
          },
          "Image":{
             "type":"object",
             "properties":{
                "url":{
                   "type":"string"
                },
                "base64":{
                   "type":"string"
                }
             }
          },
          "EmploymentTypeEnum":{
             "type":"object",
             "properties":{
                "value":{
                   "type":"string",
                   "enum":[
                      "full_time",
                      "part_time",
                      "contractor",
                      "intern",
                      "freelance",
                      "terminated",
                      "temporary",
                      "seasonal",
                      "volunteer",
                      "probation",
                      "internal",
                      "external",
                      "unmapped_value"
                   ]
                },
                "source_value":{
                   "type":"string"
                }
             },
             "required":[
                "value",
                "source_value"
             ]
          },
          "EmploymentStatusEnum":{
             "type":"object",
             "properties":{
                "value":{
                   "type":"string",
                   "enum":[
                      "active",
                      "pending",
                      "terminated",
                      "leave",
                      "unmapped_value"
                   ]
                },
                "source_value":{
                   "type":"string"
                }
             },
             "required":[
                "value",
                "source_value"
             ]
          },
          "PayPeriodEnum":{
             "type":"object",
             "properties":{
                "value":{
                   "type":"string",
                   "enum":[
                      "hour",
                      "day",
                      "week",
                      "every_two_weeks",
                      "month",
                      "quarter",
                      "every_six_months",
                      "year",
                      "unmapped_value"
                   ]
                },
                "source_value":{
                   "type":"string"
                }
             },
             "required":[
                "value",
                "source_value"
             ]
          },
          "PayFrequencyEnum":{
             "type":"object",
             "properties":{
                "value":{
                   "type":"string",
                   "enum":[
                      "hourly",
                      "weekly",
                      "bi_weekly",
                      "four_weekly",
                      "semi_monthly",
                      "monthly",
                      "bi_monthly",
                      "quarterly",
                      "semi_annually",
                      "yearly",
                      "thirteen_monthly",
                      "pro_rata",
                      "unmapped_value"
                   ]
                },
                "source_value":{
                   "type":"string"
                }
             },
             "required":[
                "value",
                "source_value"
             ]
          },
          "Employment":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "employee_id":{
                   "type":"string"
                },
                "job_title":{
                   "type":"string"
                },
                "pay_rate":{
                   "type":"string"
                },
                "pay_period":{
                   "$ref":"#/components/schemas/PayPeriodEnum"
                },
                "pay_frequency":{
                   "$ref":"#/components/schemas/PayFrequencyEnum"
                },
                "pay_currency":{
                   "type":"string"
                },
                "effective_date":{
                   "format":"date-time",
                   "type":"string"
                },
                "employment_type":{
                   "$ref":"#/components/schemas/EmploymentTypeEnum"
                }
             },
             "required":[
                "employee_id"
             ]
          },
          "Employee":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string",
                   "description":"The employee ID",
                   "example":"1687-3"
                },
                "first_name":{
                   "type":"string",
                   "description":"The employee first name",
                   "example":"Issac"
                },
                "last_name":{
                   "type":"string",
                   "description":"The employee last name",
                   "example":"Newton"
                },
                "name":{
                   "type":"string",
                   "description":"The employee name",
                   "example":"Issac Newton"
                },
                "display_name":{
                   "type":"string",
                   "description":"The employee display name",
                   "example":"Sir Issac Newton"
                },
                "avatar_url":{
                   "type":"string",
                   "description":"The employee avatar Url",
                   "example":"https://example.com/avatar.png"
                },
                "personal_email":{
                   "type":"string",
                   "description":"The employee personal email",
                   "example":"isaac.newton@example.com"
                },
                "personal_phone_number":{
                   "type":"string",
                   "description":"The employee personal phone number",
                   "example":"+1234567890"
                },
                "work_email":{
                   "type":"string",
                   "description":"The employee work email",
                   "example":"newton@example.com"
                },
                "work_phone_number":{
                   "type":"string",
                   "description":"The employee work phone number",
                   "example":"+1234567890"
                },
                "job_title":{
                   "type":"string",
                   "description":"The employee job title",
                   "example":"Physicist"
                },
                "department":{
                   "type":"string",
                   "description":"The employee department",
                   "example":"Physics"
                },
                "manager_id":{
                   "type":"string",
                   "description":"The employee manager ID",
                   "example":"67890"
                },
                "company_name":{
                   "type":"string",
                   "description":"The employee company name",
                   "example":"Example Corp"
                },
                "gender":{
                   "description":"The employee gender",
                   "example":"male",
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/GenderEnum"
                      }
                   ]
                },
                "ethnicity":{
                   "description":"The employee ethnicity",
                   "example":"white",
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/EthnicityEnum"
                      }
                   ]
                },
                "date_of_birth":{
                   "type":"string",
                   "description":"The employee date of birth",
                   "example":"1990-01-01T00:00:00.000Z"
                },
                "birthday":{
                   "type":"string",
                   "description":"The employee birthday",
                   "example":"2023-06-14T00:00:00.000Z"
                },
                "marital_status":{
                   "description":"The employee marital status",
                   "example":"single",
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/MaritalStatusEnum"
                      }
                   ]
                },
                "avatar":{
                   "description":"The employee avatar",
                   "example":"https://example.com/avatar.png",
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/Image"
                      }
                   ]
                },
                "hire_date":{
                   "type":"string",
                   "description":"The employee hire date",
                   "example":"2022-01-01T00:00:00.000Z"
                },
                "start_date":{
                   "type":"string",
                   "description":"The employee start date",
                   "example":"2022-01-01T00:00:00.000Z"
                },
                "tenure":{
                   "type":"number",
                   "description":"The employee tenure",
                   "example":2
                },
                "work_anniversary":{
                   "type":"string",
                   "description":"The employee work anniversary",
                   "example":"2022-06-14T00:00:00.000Z"
                },
                "employment_type":{
                   "description":"The employee employment type",
                   "example":"Full-time",
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/EmploymentTypeEnum"
                      }
                   ]
                },
                "employment_status":{
                   "description":"The employee employment status",
                   "example":"active",
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/EmploymentStatusEnum"
                      }
                   ]
                },
                "termination_date":{
                   "type":"string",
                   "description":"The employee termination date",
                   "example":"2023-06-14T00:00:00.000Z"
                },
                "home_location":{
                   "description":"The employee home location",
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/Location"
                      }
                   ]
                },
                "work_location":{
                   "description":"The employee work location",
                   "allOf":[
                      {
                         "$ref":"#/components/schemas/Location"
                      }
                   ]
                },
                "company":{
                   "type":"string",
                   "description":"The employee company name",
                   "example":"Example Corp"
                },
                "employments":{
                   "description":"The employee employments",
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Employment"
                   }
                }
             },
             "required":[
                "first_name",
                "last_name",
                "gender"
             ]
          },
          "EmployeesPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Employee"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "EmployeeResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/Employee"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data"
             ]
          },
          "HrisCreateEmployeeRequestDto":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string",
                   "description":"The employee ID",
                   "example":"1687-3"
                },
                "first_name":{
                   "type":"string",
                   "description":"The employee first name",
                   "example":"Issac"
                },
                "last_name":{
                   "type":"string",
                   "description":"The employee last name",
                   "example":"Newton"
                },
                "name":{
                   "type":"string",
                   "description":"The employee name",
                   "example":"Issac Newton"
                },
                "display_name":{
                   "type":"string",
                   "description":"The employee display name",
                   "example":"Sir Issac Newton"
                },
                "avatar_url":{
                   "type":"string",
                   "description":"The employee avatar Url",
                   "example":"https://example.com/avatar.png"
                },
                "personal_email":{
                   "type":"string",
                   "description":"The employee personal email",
                   "example":"isaac.newton@example.com"
                },
                "personal_phone_number":{
                   "type":"string",
                   "description":"The employee personal phone number",
                   "example":"+1234567890"
                },
                "work_email":{
                   "type":"string",
                   "description":"The employee work email",
                   "example":"newton@example.com"
                },
                "work_phone_number":{
                   "type":"string",
                   "description":"The employee work phone number",
                   "example":"+1234567890"
                },
                "job_title":{
                   "type":"string",
                   "description":"The employee job title",
                   "example":"Physicist"
                },
                "department":{
                   "type":"string",
                   "description":"The employee department",
                   "example":"Physics"
                },
                "manager_id":{
                   "type":"string",
                   "description":"The employee manager ID",
                   "example":"67890"
                },
                "company_name":{
                   "type":"string",
                   "description":"The employee company name",
                   "example":"Example Corp"
                },
                "gender":{
                   "type":"string",
                   "description":"The employee gender",
                   "enum":[
                      "male",
                      "female",
                      "non_binary",
                      "other",
                      "not_disclosed",
                      "diverse",
                      "unmapped_value"
                   ]
                },
                "ethnicity":{
                   "type":"string",
                   "description":"The employee ethnicity",
                   "enum":[
                      "white",
                      "black_or_african_american",
                      "asian",
                      "hispanic_or_latino",
                      "american_indian_or_alaska_native",
                      "native_hawaiian_or_pacific_islander",
                      "two_or_more_races",
                      "not_disclosed",
                      "other",
                      "unmapped_value"
                   ]
                },
                "date_of_birth":{
                   "type":"string",
                   "description":"The employee date of birth",
                   "example":"1990-01-01"
                },
                "birthday":{
                   "type":"string",
                   "description":"The employee birthday",
                   "example":"2023-06-14T00:00:00Z"
                },
                "marital_status":{
                   "type":"string",
                   "description":"The employee marital status",
                   "enum":[
                      "single",
                      "married",
                      "common_law",
                      "divorced",
                      "widowed",
                      "domestic_partnership",
                      "separated",
                      "other",
                      "not_disclosed",
                      "unmapped_value"
                   ]
                },
                "avatar":{
                   "type":"string",
                   "description":"The employee avatar",
                   "example":"https://example.com/avatar.png"
                },
                "hire_date":{
                   "type":"string",
                   "description":"The employee hire date",
                   "example":"2022-01-01"
                },
                "start_date":{
                   "type":"string",
                   "description":"The employee start date",
                   "example":"2022-01-01"
                },
                "tenure":{
                   "type":"string",
                   "description":"The employee tenure",
                   "example":2
                },
                "work_anniversary":{
                   "type":"string",
                   "description":"The employee work anniversary",
                   "example":"2022-06-14T00:00:00Z"
                },
                "employment_type":{
                   "type":"string",
                   "description":"The employee employment type",
                   "enum":[
                      "full_time",
                      "part_time",
                      "contractor",
                      "intern",
                      "freelance",
                      "terminated",
                      "temporary",
                      "seasonal",
                      "volunteer",
                      "probation",
                      "internal",
                      "external",
                      "unmapped_value"
                   ]
                },
                "employment_status":{
                   "type":"string",
                   "description":"The employee employment status",
                   "enum":[
                      "active",
                      "pending",
                      "terminated",
                      "leave",
                      "unmapped_value"
                   ]
                },
                "termination_date":{
                   "type":"string",
                   "description":"The employee termination date",
                   "example":"2023-06-14T00:00:00Z"
                }
             },
             "required":[
                "first_name",
                "last_name"
             ]
          },
          "CreateEmployeeResult":{
             "type":"object",
             "properties":{
                "statusCode":{
                   "type":"number"
                },
                "message":{
                   "type":"string"
                },
                "timestamp":{
                   "format":"date-time",
                   "type":"string"
                }
             },
             "required":[
                "statusCode",
                "message",
                "timestamp"
             ]
          },
          "EmploymentsPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Employment"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "EmploymentResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/Employment"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data"
             ]
          },
          "Contact":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "first_name":{
                   "type":"string"
                },
                "last_name":{
                   "type":"string"
                },
                "company_name":{
                   "type":"string"
                },
                "emails":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "phone_numbers":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "deal_ids":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "account_ids":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "created_at":{
                   "type":"string"
                },
                "updated_at":{
                   "type":"string"
                }
             },
             "required":[
                "id",
                "first_name",
                "last_name"
             ]
          },
          "ContactsPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Contact"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "CrmCreateContactRequestDto":{
             "type":"object",
             "properties":{
                "first_name":{
                   "type":"string"
                },
                "last_name":{
                   "type":"string"
                },
                "company_name":{
                   "type":"string"
                },
                "emails":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "phone_numbers":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "deal_ids":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "account_ids":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                }
             },
             "required":[
                "first_name",
                "last_name"
             ]
          },
          "ContactResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/Contact"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data"
             ]
          },
          "CrmUpdateContactRequestDto":{
             "type":"object",
             "properties":{
                "first_name":{
                   "type":"string"
                },
                "last_name":{
                   "type":"string"
                },
                "company_name":{
                   "type":"string"
                },
                "emails":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "phone_numbers":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "deal_ids":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "account_ids":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                }
             }
          },
          "AccountsPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Account"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "AccountResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/Account"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data"
             ]
          },
          "PushMessageContents":{
             "type":"object",
             "properties":{
                "body":{
                   "type":"string"
                }
             },
             "required":[
                "body"
             ]
          },
          "EmailMessageContents":{
             "type":"object",
             "properties":{
                "subject":{
                   "type":"string"
                },
                "body":{
                   "type":"string"
                },
                "from":{
                   "type":"string"
                },
                "reply-to":{
                   "type":"string"
                },
                "preheader":{
                   "type":"string"
                }
             },
             "required":[
                "subject",
                "body",
                "from"
             ]
          },
          "SmsMessageContents":{
             "type":"object",
             "properties":{
                "body":{
                   "type":"string"
                },
                "from":{
                   "type":"string"
                }
             },
             "required":[
                "body"
             ]
          },
          "MessageTypeEnum":{
             "type":"object",
             "properties":{
                "value":{
                   "type":"string",
                   "enum":[
                      "email",
                      "sms",
                      "web_push",
                      "ios_push",
                      "android_push",
                      "app_push",
                      "omni_channel",
                      "unknown",
                      "unmapped_value"
                   ]
                },
                "source_value":{
                   "type":"string"
                }
             },
             "required":[
                "value",
                "source_value"
             ]
          },
          "Template":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                },
                "message_type":{
                   "$ref":"#/components/schemas/MessageTypeEnum"
                },
                "message_content":{
                   "oneOf":[
                      {
                         "$ref":"#/components/schemas/SmsMessageContents"
                      },
                      {
                         "$ref":"#/components/schemas/PushMessageContents"
                      },
                      {
                         "$ref":"#/components/schemas/EmailMessageContents"
                      }
                   ]
                },
                "tags":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "created_at":{
                   "type":"string"
                },
                "updated_at":{
                   "type":"string"
                }
             },
             "required":[
                "id",
                "name",
                "message_type"
             ]
          },
          "TemplatesPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Template"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "TemplateResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/Template"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data"
             ]
          },
          "MarketingCreateTemplateRequestDto":{
             "type":"object",
             "properties":{
                "name":{
                   "type":"string",
                   "description":"The template name",
                   "example":"My template"
                },
                "subject":{
                   "type":"string",
                   "description":"The template subject",
                   "example":"My template subject"
                },
                "body":{
                   "type":"string",
                   "description":"The template body",
                   "example":"<html><body>My template</body></html>"
                },
                "preheader":{
                   "type":"string",
                   "description":"The template preheader",
                   "example":"My template preheader"
                },
                "tags":{
                   "description":"Tags",
                   "example":"[\"My Tag 1\", \"My Tag 2\"]",
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                }
             },
             "required":[
                "body"
             ]
          },
          "CreateTemplateResult":{
             "type":"object",
             "properties":{
                "statusCode":{
                   "type":"number"
                },
                "message":{
                   "type":"string"
                },
                "timestamp":{
                   "format":"date-time",
                   "type":"string"
                }
             },
             "required":[
                "statusCode",
                "message",
                "timestamp"
             ]
          },
          "Message":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                },
                "message_type":{
                   "type":"string",
                   "enum":[
                      "email",
                      "sms",
                      "web_push",
                      "ios_push",
                      "android_push",
                      "app_push",
                      "omni_channel",
                      "unknown",
                      "unmapped_value"
                   ]
                },
                "message_content":{
                   "oneOf":[
                      {
                         "$ref":"#/components/schemas/SmsMessageContents"
                      },
                      {
                         "$ref":"#/components/schemas/EmailMessageContents"
                      },
                      {
                         "$ref":"#/components/schemas/PushMessageContents"
                      }
                   ]
                }
             },
             "required":[
                "id",
                "name",
                "message_type"
             ]
          },
          "Campaign":{
             "type":"object",
             "properties":{
                "id":{
                   "type":"string"
                },
                "name":{
                   "type":"string"
                },
                "created_at":{
                   "type":"string"
                },
                "updated_at":{
                   "type":"string"
                },
                "description":{
                   "type":"string"
                },
                "archived":{
                   "type":"boolean"
                },
                "draft":{
                   "type":"boolean"
                },
                "channels":{
                   "type":"array",
                   "example":[
                      "email",
                      "sms",
                      "ios_push",
                      "android_push"
                   ],
                   "items":{
                      "type":"string",
                      "enum":[
                         "email",
                         "sms",
                         "web_push",
                         "ios_push",
                         "android_push",
                         "unknown",
                         "unmapped_value"
                      ]
                   }
                },
                "first_sent_at":{
                   "type":"string"
                },
                "last_sent_at":{
                   "type":"string"
                },
                "tags":{
                   "type":"array",
                   "items":{
                      "type":"string"
                   }
                },
                "messages":{
                   "example":[
                      {
                         "id":"message-id-1",
                         "name":"SMS Message",
                         "message_type":{
                            "value":"sms",
                            "sourceValue":"sms-message"
                         },
                         "message_content":{
                            "body":"This is an example SMS body.",
                            "from":"1-555-123-4567"
                         }
                      },
                      {
                         "id":"message-id-2",
                         "name":"Email Message",
                         "message_type":{
                            "value":"email",
                            "sourceValue":"email-message"
                         },
                         "message_content":{
                            "subject":"Example Email Subject",
                            "body":"<h1>This is an example</h1>\n            <p>email body</p>",
                            "from":"Jane Smith",
                            "reply-to":"reply@example.com",
                            "preheader":"This is the preheader of the email."
                         }
                      },
                      {
                         "id":"message-id-3",
                         "name":"iOS Push Message",
                         "message_type":{
                            "value":"ios_push",
                            "sourceValue":"ios-push"
                         },
                         "message_content":{
                            "body":"This is an example push notification body."
                         }
                      }
                   ],
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Message"
                   }
                }
             },
             "required":[
                "name"
             ]
          },
          "CampaignsPaginated":{
             "type":"object",
             "properties":{
                "next_page":{
                   "type":"string"
                },
                "data":{
                   "type":"array",
                   "items":{
                      "$ref":"#/components/schemas/Campaign"
                   }
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "next_page",
                "data"
             ]
          },
          "CampaignResult":{
             "type":"object",
             "properties":{
                "data":{
                   "$ref":"#/components/schemas/Campaign"
                },
                "raw":{
                   "type":"string"
                }
             },
             "required":[
                "data"
             ]
          },
          "ProxyRequestBody":{
             "type":"object",
             "properties":{
                "url":{
                   "type":"string",
                   "description":"The base url of the request",
                   "default":"",
                   "example":"https://api.sample-integration.com/v1"
                },
                "method":{
                   "type":"string",
                   "description":"The method of the request",
                   "enum":[
                      "get",
                      "post",
                      "put",
                      "delete",
                      "patch"
                   ],
                   "default":"get"
                },
                "path":{
                   "type":"string",
                   "description":"The path of the request including any query paramters",
                   "default":"",
                   "example":"/employees/directory"
                },
                "headers":{
                   "type":"object",
                   "description":"The headers to send in the request",
                   "example":{
                      "Accept":"application/json"
                   }
                },
                "body":{
                   "type":"object",
                   "description":"The body of the request"
                }
             }
          }
       }
    }
 }
